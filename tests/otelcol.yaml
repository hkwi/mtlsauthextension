receivers:
  otlp:
    protocols:
      grpc:
        include_metadata: true
        endpoint: 0.0.0.0:4317
        auth:
          authenticator: mtlsauth
        tls:
          client_ca_file: certs/client_ca.pem
          cert_file: certs/server.pem
          key_file: certs/server-key.pem
      http:
        ## Use middleware insted of auth
#       auth:
#         authenticator: mtlsauth
        middlewares:
          - id: mtlsauth
        tls:
          client_ca_file: certs/client_ca.pem
          cert_file: certs/server.pem
          key_file: certs/server-key.pem
exporters:
  debug:
    verbosity: detailed
processors:
  vardumpprocessor:
extensions:
  mtlsauth:
    require_cert: true # default
service:
  extensions:
    - mtlsauth
  pipelines:
    logs:
      receivers: [otlp]
      exporters: [debug]
    traces:
      ## grpc client example:
      # OTEL_EXPORTER_OTLP_CLIENT_KEY=client-key.pem OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE=client.pem OTEL_CLI_TLS_NO_VERIFY=1 OTEL_EXPORTER_OTLP_ENDPOINT=https://localhost:4317 OTEL_EXPORTER_OTLP_PROTOCOL=grpc otel-cli span --name hoge --service geho
      #
      ## http client example:
      # OTEL_EXPORTER_OTLP_CLIENT_KEY=client-key.pem OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE=client.pem OTEL_CLI_TLS_NO_VERIFY=1 OTEL_EXPORTER_OTLP_ENDPOINT=https://localhost:4318 OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf otel-cli span --name hoge --service geho --verbose
      #
      receivers: [otlp]
      processors: [vardumpprocessor]
      exporters: [debug]
  telemetry:
    logs:
      level: DEBUG
